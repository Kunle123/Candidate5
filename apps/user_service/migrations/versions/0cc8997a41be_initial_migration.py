"""Initial migration

Revision ID: 0cc8997a41be
Revises: 
Create Date: 2025-08-15 19:40:00.791195

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0cc8997a41be'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('address_line1', sa.String(), nullable=True),
    sa.Column('city_state_postal', sa.String(), nullable=True),
    sa.Column('linkedin', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('monthly_credits_remaining', sa.Integer(), nullable=False),
    sa.Column('daily_credits_remaining', sa.Integer(), nullable=False),
    sa.Column('last_daily_reset', sa.DateTime(), nullable=True),
    sa.Column('last_monthly_reset', sa.DateTime(), nullable=True),
    sa.Column('subscription_type', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('topup_credits',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('topup_credits_remaining', sa.Integer(), nullable=False),
    sa.Column('topup_credits_expiry', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('projects')
    op.drop_table('experiences')
    op.drop_table('templates')
    op.drop_table('skills')
    op.drop_table('education')
    op.drop_index(op.f('ix_applications_user_id'), table_name='applications')
    op.drop_table('applications')
    op.drop_index(op.f('ix_cvs_user_id'), table_name='cvs')
    op.drop_table('cvs')
    op.drop_table('certifications')
    op.drop_table('references')
    op.drop_table('languages')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('languages',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('cv_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('proficiency', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('included', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['cv_id'], ['cvs.id'], name=op.f('languages_cv_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('languages_pkey'))
    )
    op.create_table('references',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('cv_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('company', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('position', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('included', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['cv_id'], ['cvs.id'], name=op.f('references_cv_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('references_pkey'))
    )
    op.create_table('certifications',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('cv_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('issuer', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('date_issued', sa.VARCHAR(length=7), autoincrement=False, nullable=False),
    sa.Column('date_expires', sa.VARCHAR(length=7), autoincrement=False, nullable=True),
    sa.Column('credential_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('included', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['cv_id'], ['cvs.id'], name=op.f('certifications_cv_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('certifications_pkey'))
    )
    op.create_table('cvs',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('style_options', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('personal_info', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('custom_sections', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_default', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('version', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('template_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('summary', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('last_modified', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('docx_file', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('cover_letter_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cover_letter_id'], ['cvs.id'], name='cvs_cover_letter_id_fkey', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='cvs_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_cvs_user_id'), 'cvs', ['user_id'], unique=False)
    op.create_table('applications',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('role_title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('job_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('cv_docx_file', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.Column('cover_letter_docx_file', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.Column('cv_text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('cover_letter_text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('applications_pkey'))
    )
    op.create_index(op.f('ix_applications_user_id'), 'applications', ['user_id'], unique=False)
    op.create_table('education',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('cv_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('institution', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('degree', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('field_of_study', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('start_date', sa.VARCHAR(length=7), autoincrement=False, nullable=False),
    sa.Column('end_date', sa.VARCHAR(length=7), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('included', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['cv_id'], ['cvs.id'], name=op.f('education_cv_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('education_pkey'))
    )
    op.create_table('skills',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('cv_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('level', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('years_of_experience', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('included', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['cv_id'], ['cvs.id'], name=op.f('skills_cv_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('skills_pkey'))
    )
    op.create_table('templates',
    sa.Column('id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('preview_image_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('is_premium', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('style_options', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('templates_pkey'))
    )
    op.create_table('experiences',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('cv_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('company', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('position', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('start_date', sa.VARCHAR(length=7), autoincrement=False, nullable=False),
    sa.Column('end_date', sa.VARCHAR(length=7), autoincrement=False, nullable=True),
    sa.Column('description', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('included', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('skills', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cv_id'], ['cvs.id'], name=op.f('experiences_cv_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('experiences_pkey'))
    )
    op.create_table('projects',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('cv_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('start_date', sa.VARCHAR(length=7), autoincrement=False, nullable=True),
    sa.Column('end_date', sa.VARCHAR(length=7), autoincrement=False, nullable=True),
    sa.Column('included', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['cv_id'], ['cvs.id'], name=op.f('projects_cv_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('projects_pkey'))
    )
    op.drop_table('topup_credits')
    op.drop_table('users')
    # ### end Alembic commands ###
