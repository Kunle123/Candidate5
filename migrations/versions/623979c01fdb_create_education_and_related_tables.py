"""create education and related tables

Revision ID: 623979c01fdb
Revises: 91d98a9278a1
Create Date: 2025-07-24 20:57:19.624495

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '623979c01fdb'
down_revision: Union[str, None] = '91d98a9278a1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('certifications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('cv_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('issuer', sa.String(length=255), nullable=False),
    sa.Column('date_issued', sa.String(length=7), nullable=False),
    sa.Column('date_expires', sa.String(length=7), nullable=True),
    sa.Column('credential_id', sa.String(length=255), nullable=True),
    sa.Column('url', sa.String(length=255), nullable=True),
    sa.Column('included', sa.Boolean(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['cv_id'], ['cvs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('education',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('cv_id', sa.UUID(), nullable=False),
    sa.Column('institution', sa.String(length=255), nullable=False),
    sa.Column('degree', sa.String(length=255), nullable=False),
    sa.Column('field_of_study', sa.String(length=255), nullable=False),
    sa.Column('start_date', sa.String(length=7), nullable=False),
    sa.Column('end_date', sa.String(length=7), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('included', sa.Boolean(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['cv_id'], ['cvs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('projects',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('cv_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('url', sa.String(length=255), nullable=True),
    sa.Column('start_date', sa.String(length=7), nullable=True),
    sa.Column('end_date', sa.String(length=7), nullable=True),
    sa.Column('included', sa.Boolean(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['cv_id'], ['cvs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('skills',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('cv_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('years_of_experience', sa.Integer(), nullable=True),
    sa.Column('included', sa.Boolean(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['cv_id'], ['cvs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # op.drop_index(op.f('ix_cv_tasks_user_id'), table_name='cv_tasks')
    # op.drop_table('cv_tasks')
    # op.drop_index(op.f('ix_user_arc_data_user_id'), table_name='user_arc_data')
    # op.drop_table('user_arc_data')
    # op.drop_table('ai_extraction_logs')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ai_extraction_logs',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('task_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('entry_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('entry_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('prompt', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('response', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('error_message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['cv_tasks.id'], name=op.f('ai_extraction_logs_task_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('ai_extraction_logs_pkey'))
    )
    op.create_table('user_arc_data',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('arc_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='user_arc_data_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_user_arc_data_user_id'), 'user_arc_data', ['user_id'], unique=True)
    op.create_table('cv_tasks',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('pending', 'completed', 'failed', 'metadata_extracted', 'completed_with_errors', name='taskstatusenum'), autoincrement=False, nullable=False),
    sa.Column('extracted_data_summary', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('error', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_arc_data.user_id'], name=op.f('cv_tasks_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('cv_tasks_pkey'))
    )
    op.create_index(op.f('ix_cv_tasks_user_id'), 'cv_tasks', ['user_id'], unique=False)
    op.drop_table('skills')
    op.drop_table('projects')
    op.drop_table('education')
    op.drop_table('certifications')
    # ### end Alembic commands ###
